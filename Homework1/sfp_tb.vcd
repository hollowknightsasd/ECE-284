$date
	Tue Sep 27 16:29:00 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module sfp_tb $end
$var wire 16 ! out [15:0] $end
$var reg 1 " acc $end
$var reg 1 # clk $end
$var reg 8 $ in [7:0] $end
$var reg 1 % relu $end
$var reg 1 & reset $end
$var reg 16 ' thres [15:0] $end
$var integer 32 ( i [31:0] $end
$var integer 32 ) in_dec [31:0] $end
$var integer 32 * in_file [31:0] $end
$var integer 32 + in_scan_file [31:0] $end
$var integer 32 , u [31:0] $end
$scope function dec2bin $end
$var reg 8 - dec2bin [7:0] $end
$var integer 32 . weight [31:0] $end
$upscope $end
$scope module sfp_instance $end
$var wire 1 " acc $end
$var wire 1 # clk $end
$var wire 8 / in [7:0] $end
$var wire 16 0 out [15:0] $end
$var wire 1 % relu $end
$var wire 1 & reset $end
$var wire 16 1 thres [15:0] $end
$var reg 16 2 psum_q [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
b10000000000000000000000000000011 *
bx )
bx (
bx '
x&
x%
bx $
0#
x"
bx !
$end
#1
0"
0%
1&
#2
b0 !
b0 0
b0 2
1#
#3
0#
#4
1#
#5
b0 (
0&
0#
#6
1#
#7
b1 (
b10000000 $
b10000000 /
b11111111111111111111111111111111 ,
b10000000 -
b0 .
b1 +
b11111111111111111111111110000000 )
b1000000 '
b1000000 1
1"
0#
#8
b1111111110000000 !
b1111111110000000 0
b1111111110000000 2
1#
#9
b10 (
b100011 $
b100011 /
b11111111111111111111111111111111 ,
b100011 -
b0 .
b100011 )
0#
#10
b1111111110100011 !
b1111111110100011 0
b1111111110100011 2
1#
#11
b11 (
b11111011 $
b11111011 /
b11111111111111111111111111111111 ,
b11111011 -
b0 .
b11111111111111111111111111111011 )
0#
#12
b1111111110011110 !
b1111111110011110 0
b1111111110011110 2
1#
#13
b100 (
b1000000 $
b1000000 /
b11111111111111111111111111111111 ,
b1000000 -
b0 .
b1000000 )
0#
#14
b1111111111011110 !
b1111111111011110 0
b1111111111011110 2
1#
#15
b101 (
b11111111111111111111111111111111 ,
b0 .
0#
#16
b11110 !
b11110 0
b11110 2
1#
#17
b110 (
b10011011 $
b10011011 /
b11111111111111111111111111111111 ,
b10011011 -
b0 .
b11111111111111111111111110011011 )
0#
#18
b1111111110111001 !
b1111111110111001 0
b1111111110111001 2
1#
#19
b111 (
b1010 $
b1010 /
b11111111111111111111111111111111 ,
b1010 -
b0 .
b1010 )
0#
#20
b1111111111000011 !
b1111111111000011 0
b1111111111000011 2
1#
#21
b1000 (
b101001 $
b101001 /
b101001 -
b11111111111111111111111111111111 ,
b0 .
b101001 )
0#
#22
b1111111111101100 !
b1111111111101100 0
b1111111111101100 2
1#
#23
b1001 (
b11111010 $
b11111010 /
b11111111111111111111111111111111 ,
b11111010 -
b0 .
b11111111111111111111111111111010 )
0#
#24
b1111111111100110 !
b1111111111100110 0
b1111111111100110 2
1#
#25
b1010 (
b11111100 $
b11111100 /
b11111100 -
b11111111111111111111111111111111 ,
b0 .
b11111111111111111111111111111100 )
0#
#26
b1111111111100010 !
b1111111111100010 0
b1111111111100010 2
1#
#27
1%
0"
0#
#28
b0 !
b0 0
b0 2
1#
#29
0#
#39
